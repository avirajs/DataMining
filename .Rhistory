typeof(x)
x <- c(3,12,6,-5,0,8,15,1,-10,7)
typeof(x)
q()
library("tidyverse")
library("ggplot2")
library("ggrepel")
library("ggcorrplot")
library("DT")
cases <- read.csv("COVID-19_cases_plus_census.csv")
cases <- cases %>% mutate_if(is.character, factor)
head(cases)
dim(cases)
cases <- read.csv("COVID-19_cases_plus_census.csv")
library("tidyverse")
library("ggplot2")
library("ggrepel")
library("ggcorrplot")
library("DT")
library("reshape2")
cases_TX <- read_csv("COVID-19_cases_TX.csv")
cases_TX <- cases_TX %>% mutate_if(is.character, factor)
cases_US <- read_csv("Covid_Cases_US_Timeline.csv")
cases_US <- cases_US %>% mutate_if(is.character, factor)
setwd("~/GitHub/DataMining")
cases_TX <- read_csv("COVID-19_cases_TX.csv")
cases_TX <- cases_TX %>% mutate_if(is.character, factor)
cases_US <- read_csv("Covid_Cases_US_Timeline.csv")
cases_US <- cases_US %>% mutate_if(is.character, factor)
View(cases_TX)
cases_confirmed_by_county <- cases_TX %>% select(confirmed_cases,county_name, date) %>%
drop_na() %>% group_by(county_name, date) %>% summarize(cases_per_day = c(confirmed_cases[1],diff(confirmed_cases)) )
#cumulative
ggplot(cases_confirmed_by_county, aes(x = date, y = cases_per_day)) +
geom_line(aes(color = county_name, linetype = county_name), show.legend = FALSE  ) +
geom_smooth(aes(color = county_name, linetype = county_name), show.legend = FALSE, se=FALSE)+
ylim(0,100)
cases_confirmed_by_county <- cases_TX %>% select(county_name, date, confirmed_cases) %>%
group_by(county_name, date) %>% dcast(date ~ county_name,value.var="confirmed_cases")  %>% select(-date)%>%sapply( diff, lag=1) %>%
melt(id.vars = c("date", "county_name"), measure.vars = c("cases_per_day")) %>%   drop_na()
#Created a sequence of dates from the start of the data
cases_dates <- seq(as.Date("2020/01/23"), as.Date("2020/06/04"), "day" )
#Created a new column called Dates and repeat the sequence for each county
cases_confirmed_by_county <- cases_confirmed_by_county %>% mutate(
Dates = rep(cases_dates,times = 255)
)
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
geom_smooth(aes(color = Var2, linetype = Var2), show.legend = FALSE, se=FALSE) + ylim(0,20)
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
geom_smooth(aes(color = Var2, linetype = Var2), show.legend = FALSE, se=FALSE) + ylim(0,20) + ggtitle("Number of cases per day: Texas")
setwd("~/GitHub/DataMining")
cases_US <- read_csv("COVID-19_Cases_Timeline_US.csv")
cases_US <- cases_US %>% mutate_if(is.character, factor)
cases_confirmed_by_state <- cases_US %>% select(confirmed_cases,state, date) %>%
drop_na() %>% group_by(state, date) %>% summarize(cases_per_day = c(confirmed_cases[1],diff(confirmed_cases)) )
View(cases_confirmed_by_state)
View(cases_confirmed_by_state)
View(cases_US)
View(cases_US)
cases_confirmed_by_state <- cases_US %>% select(state, date,confirmed_cases)%>%
group_by(state, date) %>% dcast(date ~ state,value.var="confirmed_cases")  %>% select(-date)%>%sapply( diff, lag=1) %>%
melt(id.vars = c("date", "state"), measure.vars = c("cases_per_day")) %>%   drop_na()
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates,times = 51)
)
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates,times = 52)
)
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates,times = 53)
)
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates,times = 54)
)
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates,times = 57)
)
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates,times = 58)
)
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates,times = 59)
)
View(cases_confirmed_by_county)
View(cases_confirmed_by_county)
cases_dates_us <- seq(as.Date("2020/01/23"), as.Date("2020/06/24"), "day" )
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates_us,times = 50)
)
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates_us,times = 51)
)
cases_dates_us <- seq(as.Date("2020/01/23"), as.Date("2020/06/23"), "day" )
cases_confirmed_by_state <- cases_confirmed_by_state %>% mutate(
Dates = rep(cases_dates_us,times = 51)
)
ggplot(cases_confirmed_by_state, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
geom_smooth(aes(color = Var2, linetype = Var2), show.legend = FALSE, se=FALSE) + ylim(0,20) + ggtitle("Number of cases per day: US")
library("plotly")
library("hrbrthemes")
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
annotate(geom="text", x=Date("2020-04-30"), y=20089,
label="Stage 1 of Texas reopening")
library("tidyverse")
library("ggplot2")
library("ggrepel")
library("ggcorrplot")
library("DT")
library("reshape2")
library("plotly")
library("hrbrthemes")
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
annotate(geom="text", x=Date("2020-04-30"), y=20089,
label="Stage 1 of Texas reopening")
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
annotate(geom="text", x= Dates("2020-04-30"), y=20089,
label="Stage 1 of Texas reopening")
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
annotate(geom="text", x= "2020-04-30", y=20089,
label="Stage 1 of Texas reopening")
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
annotate(geom="text", x= "2020-04-30", y=20089,
label="Stage 1 of Texas reopening") +
geom_smooth(aes(color = Var2, linetype = Var2), show.legend = FALSE, se=FALSE) + ylim(0,20) + ggtitle("Number of cases per day: Texas")
ggplot(cases_confirmed_by_state, aes(x = Dates, y = value)) +
# geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  ) +
geom_smooth(aes(color = Var2, linetype = Var2), show.legend = FALSE, se=FALSE) + ylim(0,20) + ggtitle("Number of cases per day: US")
View(cases_US)
ggplot(cases_confirmed_by_state, aes(x = Dates, y = value)) +
geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  )  + ylim(0,20) + ggtitle("Number of cases per day: US")
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  )
ggplot(cases_confirmed_by_county, aes(x = Dates, y = value)) +
geom_line(aes(color = Var2, linetype = Var2), show.legend = FALSE  )  + ggtitle("Number of cases per day: Texas")
View(cases_US)
View(cases_US)
View(cases_confirmed_by_state)
View(cases_confirmed_by_state)
cases_confirmed_by_state <- cases_US %>% select(confirmed_cases,state, date) %>%
drop_na() %>% group_by(state, date) %>% summarize(cases_per_day = c(confirmed_cases[1],diff(confirmed_cases)) )
View(cases_confirmed_by_county)
cases_confirmed_by_state <- cases_US %>% select(confirmed_cases,state, date) %>%
drop_na() %>% group_by(state, date)
cases_confirmed_by_state <- cases_US %>% select(state, date,confirmed_cases)%>%
group_by(state, date) %>% dcast(date ~ state,value.var="confirmed_cases")  %>% select(-date)%>%sapply( diff, lag=1) %>%
melt(id.vars = c("date", "state"), measure.vars = c("cases_per_day")) %>%   drop_na()
cases_confirmed_by_state <- cases_US %>% select(confirmed_cases,state, date) %>%
drop_na() %>% group_by(state, date) %>% summarize(cases_per_day = sum(confirmed_cases))
View(cases_confirmed_by_state)
cases_confirmed_by_state <- cases_US %>% select(state, date,confirmed_cases)%>%
group_by(state, date) %>% dcast(date ~ state,value.var="confirmed_cases")  %>% select(-date)%>%sapply( diff, lag=1) %>%
melt(id.vars = c("date", "state"), measure.vars = c("cases_per_day")) %>%   drop_na()
cases_confirmed_by_state <- cases_US %>% select(confirmed_cases,state, date) %>%
drop_na() %>% group_by(state, date) %>% summarize(cases_per_day = sum(confirmed_cases))
cases_confirmed_by_state <- cases_US %>% select(confirmed_cases,state, date) %>%
drop_na() %>% group_by(state, date) %>%  summarize(cases_per_day = c(confirmed_cases[1],diff(confirmed_cases)) )
View(cases_confirmed_by_state)
cases_confirmed_by_state <- cases_US %>% select(confirmed_cases,state, date) %>%
drop_na() %>% group_by(state, date) %>% summarize(cases_per_day = sum(confirmed_cases))
View(cases_confirmed_by_state)
